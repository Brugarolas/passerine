name: Rust Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        triple:
          # - triple: aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          # - triple: aarch64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          # - aarch64-apple-darwin
          - x86_64-apple-darwin
        include:
          - triple: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - triple: x86_64-pc-windows-msvc
            os: windows-latest
          - triple: x86_64-apple-darwin
            os: macos-latest

    name: Build Releases
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out Passerine
        uses: actions/checkout@v2
        with:
          path: passerine

      - name: Check out Aspen
        uses: actions/checkout@v2
        with:
          repository: vrtbl/aspen
          path: aspen

      - name: Get Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.triple }}
          override: true

      - name: Cross-Compile
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --manifest-path ./aspen/Cargo.toml --target=${{ matrix.triple }}

      - name: Move Binary
        run: mv ./aspen/target/${{ matrix.triple }}/release/aspen ./bin/${{ matrix.triple }}/aspen

      - name: Compress Zip
        run: zip --junk-paths ./compress/passerine-${{ github.ref }}-${{ matrix.triple }}.zip ./bin/${{ matrix.triple }}/aspen

      - name: Compress Tar
      - run: tar -czf ./compress/passerine-${{ github.ref }}-${{ matrix.triple }}.tar.gz -C .bin/${{ matrix.triple }} aspen

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Aspen Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Upload Release Zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./compress/passerine-${{ github.ref }}-${{ matrix.triple }}.zip
          asset_name: passerine-${{ github.ref }}-${{ matrix.triple }}.zip
          asset_content_type: application/zip

      - name: Upload Release Tarball
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./compress/passerine-${{ github.ref }}-${{ matrix.triple }}.tar.gz
          asset_name: passerine-${{ github.ref }}-${{ matrix.triple }}.tar.gz
          asset_content_type: application/gzip
